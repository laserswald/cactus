!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/5a4b6d04/
CACT_GC_STRESS	lib/store.c	/^#define CACT_GC_STRESS$/;"	d	file:
CACT_OBJ_CONT	include/cactus/obj.h	/^	CACT_OBJ_CONT,$/;"	e	enum:cact_obj_type
CACT_OBJ_ENVIRONMENT	include/cactus/obj.h	/^	CACT_OBJ_ENVIRONMENT,$/;"	e	enum:cact_obj_type
CACT_OBJ_ERROR	include/cactus/obj.h	/^	CACT_OBJ_ERROR,$/;"	e	enum:cact_obj_type
CACT_OBJ_H	include/cactus/obj.h	/^#define CACT_OBJ_H$/;"	d
CACT_OBJ_PAIR	include/cactus/obj.h	/^	CACT_OBJ_PAIR,$/;"	e	enum:cact_obj_type
CACT_OBJ_PROCEDURE	include/cactus/obj.h	/^	CACT_OBJ_PROCEDURE,$/;"	e	enum:cact_obj_type
CACT_OBJ_STRING	include/cactus/obj.h	/^	CACT_OBJ_STRING,$/;"	e	enum:cact_obj_type
CACT_STORE_H	include/cactus/store.h	/^#define CACT_STORE_H$/;"	d
CACT_STORE_MARK_FREE	include/cactus/store.h	/^	CACT_STORE_MARK_FREE,$/;"	e	enum:cact_store_marking
CACT_STORE_MARK_OCCUPIED	include/cactus/store.h	/^	CACT_STORE_MARK_OCCUPIED,$/;"	e	enum:cact_store_marking
CACT_STORE_MARK_REACHABLE	include/cactus/store.h	/^	CACT_STORE_MARK_REACHABLE$/;"	e	enum:cact_store_marking
DEFINE_OBJECT_CHECK	include/cactus/obj.h	/^#define DEFINE_OBJECT_CHECK(/;"	d	signature:(funcname,typemarker)
DEFINE_OBJECT_CONVERSION	include/cactus/obj.h	/^#define DEFINE_OBJECT_CONVERSION(/;"	d	signature:(typemarker,returntype,funcname,membername)
__CACT_CORE_H__	include/cactus/core.h	/^#define __CACT_CORE_H__$/;"	d
__anon79ada8490108	lib/store.c	/^	struct {$/;"	s	function:cact_store_init	file:
__anoneb1a65170108	lib/obj.c	/^struct {$/;"	s	file:
arena	include/cactus/store.h	/^	struct cact_arena *arena;$/;"	m	struct:cact_store_data	typeref:struct:cact_arena *
arena_sets	include/cactus/store.h	/^	struct cact_arena_set *arena_sets;$/;"	m	struct:cact_store	typeref:struct:cact_arena_set *
cact_alloc	lib/core.c	/^cact_alloc(struct cactus *cact, enum cact_obj_type t)$/;"	f	typeref:struct:cact_obj *	signature:(struct cactus * cact,enum cact_obj_type t)
cact_append	lib/pair.c	/^cact_append(struct cactus *cact, struct cact_val l, struct cact_val x)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_val l,struct cact_val x)
cact_arena	include/cactus/store.h	/^struct cact_arena {$/;"	s
cact_arena_count	lib/store.c	/^cact_arena_count(struct cact_arena *arena)$/;"	f	typeref:typename:int	signature:(struct cact_arena * arena)
cact_arena_finish	lib/store.c	/^cact_arena_finish(struct cact_arena *arena)$/;"	f	typeref:typename:void	signature:(struct cact_arena * arena)
cact_arena_get	lib/store.c	/^cact_arena_get(struct cact_arena *arena, size_t nth)$/;"	f	typeref:struct:cact_obj *	signature:(struct cact_arena * arena,size_t nth)
cact_arena_get_next	lib/store.c	/^cact_arena_get_next(struct cact_arena *arena)$/;"	f	typeref:struct:cact_obj *	signature:(struct cact_arena * arena)
cact_arena_has	lib/store.c	/^cact_arena_has(struct cact_arena *arena, void *thing)$/;"	f	typeref:typename:bool	signature:(struct cact_arena * arena,void * thing)
cact_arena_init	lib/store.c	/^cact_arena_init(struct cact_arena *arena, size_t element_sz)$/;"	f	typeref:typename:void	signature:(struct cact_arena * arena,size_t element_sz)
cact_arena_is_full	lib/store.c	/^cact_arena_is_full(struct cact_arena *arena)$/;"	f	typeref:typename:bool	signature:(struct cact_arena * arena)
cact_arena_mark_open	lib/store.c	/^cact_arena_mark_open(struct cact_arena *arena, size_t nth)$/;"	f	typeref:typename:void	signature:(struct cact_arena * arena,size_t nth)
cact_arena_next_open	lib/store.c	/^cact_arena_next_open(struct cact_arena *arena)$/;"	f	typeref:typename:size_t	signature:(struct cact_arena * arena)
cact_arena_set_allocate	lib/store.c	/^cact_arena_set_allocate(struct cact_arena_set *set)$/;"	f	typeref:struct:cact_obj *	signature:(struct cact_arena_set * set)
cact_arena_set_clean	lib/store.c	/^cact_arena_set_clean(struct cact_arena_set *set)$/;"	f	typeref:typename:int	signature:(struct cact_arena_set * set)
cact_arena_set_count	lib/store.c	/^cact_arena_set_count(struct cact_arena_set *set)$/;"	f	typeref:typename:int	signature:(struct cact_arena_set * set)
cact_arena_set_finish	lib/store.c	/^cact_arena_set_finish(struct cact_arena_set *set)$/;"	f	typeref:typename:void	signature:(struct cact_arena_set * set)
cact_arena_set_init	lib/store.c	/^cact_arena_set_init(struct cact_arena_set *set, size_t elt_sz)$/;"	f	typeref:typename:void	signature:(struct cact_arena_set * set,size_t elt_sz)
cact_arena_set_sweep	lib/store.c	/^cact_arena_set_sweep(struct cact_arena_set *set)$/;"	f	typeref:typename:size_t	signature:(struct cact_arena_set * set)
cact_arena_slot_occupied	lib/store.c	/^cact_arena_slot_occupied(struct cact_arena *arena, size_t nth)$/;"	f	typeref:typename:bool	signature:(struct cact_arena * arena,size_t nth)
cact_arena_sweep	lib/store.c	/^cact_arena_sweep(struct cact_arena *arena)$/;"	f	typeref:typename:size_t	signature:(struct cact_arena * arena)
cact_assoc	lib/pair.c	/^cact_assoc(struct cactus *cact, struct cact_val key, struct cact_val alist)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_val key,struct cact_val alist)
cact_builtin	include/cactus/core.h	/^struct cact_builtin {$/;"	s
cact_call_stack_pop	lib/core.c	/^cact_call_stack_pop(struct cactus *cact)$/;"	f	typeref:typename:void	signature:(struct cactus * cact)
cact_call_stack_push	lib/core.c	/^cact_call_stack_push(struct cactus *cact, struct cact_env *frame)$/;"	f	typeref:typename:void	signature:(struct cactus * cact,struct cact_env * frame)
cact_car	lib/pair.c	/^cact_car(struct cactus *cact, struct cact_val x)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_val x)
cact_cdr	lib/pair.c	/^cact_cdr(struct cactus *cact, struct cact_val x)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_val x)
cact_collect_garbage	lib/core.c	/^cact_collect_garbage(struct cactus *cact)$/;"	f	typeref:typename:void	signature:(struct cactus * cact)
cact_cons	lib/pair.c	/^cact_cons(struct cactus *cact, struct cact_val a, struct cact_val d)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_val a,struct cact_val d)
cact_cont	include/cactus/core.h	/^struct cact_cont {$/;"	s
cact_current_env	lib/core.c	/^cact_current_env(struct cactus *cact)$/;"	f	typeref:struct:cact_env *	signature:(struct cactus * cact)
cact_define	lib/core.c	/^cact_define(struct cactus *cact, const char *name, struct cact_val val)$/;"	f	typeref:typename:void	signature:(struct cactus * cact,const char * name,struct cact_val val)
cact_define_builtin	lib/core.c	/^cact_define_builtin(struct cactus *cact, const char *name, cact_native_func fn)$/;"	f	typeref:typename:void	signature:(struct cactus * cact,const char * name,cact_native_func fn)
cact_define_builtin_array	lib/core.c	/^cact_define_builtin_array(struct cactus *cact, struct cact_builtin *builtins, size_t len)$/;"	f	typeref:typename:void	signature:(struct cactus * cact,struct cact_builtin * builtins,size_t len)
cact_destroy_cont	lib/core.c	/^cact_destroy_cont(struct cact_obj *o)$/;"	f	typeref:typename:void	signature:(struct cact_obj * o)
cact_destroy_pair	lib/pair.c	/^cact_destroy_pair(struct cact_obj *o)$/;"	f	typeref:typename:void	signature:(struct cact_obj * o)
cact_destroy_proc	lib/proc.c	/^cact_destroy_proc(struct cact_obj *o)$/;"	f	typeref:typename:void	signature:(struct cact_obj * o)
cact_eval	lib/eval.c	/^cact_eval(struct cactus *cact, struct cact_val x)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_val x)
cact_eval_file	lib/eval.c	/^cact_eval_file(struct cactus *cact, FILE *in)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,FILE * in)
cact_eval_list	lib/eval.c	/^cact_eval_list(struct cactus *cact, struct cact_val lst)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_val lst)
cact_eval_string	lib/eval.c	/^cact_eval_string(struct cactus *cact, char *s)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,char * s)
cact_finish	lib/core.c	/^cact_finish(struct cactus *cact)$/;"	f	typeref:typename:void	signature:(struct cactus * cact)
cact_init	lib/core.c	/^cact_init(struct cactus *cact)$/;"	f	typeref:typename:void	signature:(struct cactus * cact)
cact_length	lib/pair.c	/^cact_length(struct cactus *cact, struct cact_val l)$/;"	f	typeref:typename:unsigned int	signature:(struct cactus * cact,struct cact_val l)
cact_list_acons	lib/pair.c	/^cact_list_acons(struct cactus *cact, struct cact_val key, struct cact_val val, struct cact_val a/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_val key,struct cact_val val,struct cact_val alist)
cact_make_native_proc	lib/proc.c	/^cact_make_native_proc(struct cactus *cact, cact_native_func fn)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,cact_native_func fn)
cact_make_procedure	lib/proc.c	/^cact_make_procedure(struct cactus *cact, struct cact_env *e, struct cact_val argl, struct cact_v/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_env * e,struct cact_val argl,struct cact_val body)
cact_mark_cont	lib/core.c	/^cact_mark_cont(struct cact_obj *o)$/;"	f	typeref:typename:void	signature:(struct cact_obj * o)
cact_mark_pair	lib/pair.c	/^cact_mark_pair(struct cact_obj *o)$/;"	f	typeref:typename:void	signature:(struct cact_obj * o)
cact_mark_proc	lib/proc.c	/^cact_mark_proc(struct cact_obj *o)$/;"	f	typeref:typename:void	signature:(struct cact_obj * o)
cact_obj	include/cactus/obj.h	/^struct cact_obj {$/;"	s
cact_obj_destroy	lib/obj.c	/^cact_obj_destroy(struct cact_obj *obj)$/;"	f	typeref:typename:void	signature:(struct cact_obj * obj)
cact_obj_mark	lib/obj.c	/^cact_obj_mark(struct cact_obj *obj)$/;"	f	typeref:typename:void	signature:(struct cact_obj * obj)
cact_obj_show_type	lib/obj.c	/^const char* cact_obj_show_type(enum cact_obj_type t)$/;"	f	typeref:typename:const char *	signature:(enum cact_obj_type t)
cact_obj_type	include/cactus/obj.h	/^enum cact_obj_type {$/;"	g
cact_preserve	lib/core.c	/^cact_preserve(struct cactus *cact, struct cact_obj *obj)$/;"	f	typeref:typename:void	signature:(struct cactus * cact,struct cact_obj * obj)
cact_proc_apply	lib/proc.c	/^cact_proc_apply(struct cactus *cact, struct cact_proc *clo, struct cact_val args)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_proc * clo,struct cact_val args)
cact_proc_eval_args	lib/proc.c	/^cact_proc_eval_args(struct cactus *cact, struct cact_env *parent_env, struct cact_val params, st/;"	f	typeref:struct:cact_env *	file:	signature:(struct cactus * cact,struct cact_env * parent_env,struct cact_val params,struct cact_val args)
cact_set_car	lib/pair.c	/^cact_set_car(struct cactus *cact, struct cact_val p, struct cact_val x)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_val p,struct cact_val x)
cact_set_cdr	lib/pair.c	/^cact_set_cdr(struct cactus *cact, struct cact_val p, struct cact_val x)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_val p,struct cact_val x)
cact_show_call_stack	lib/core.c	/^cact_show_call_stack(struct cactus *cact)$/;"	f	typeref:typename:void	signature:(struct cactus * cact)
cact_store	include/cactus/store.h	/^struct cact_store {$/;"	s
cact_store_allocate	lib/store.c	/^cact_store_allocate(struct cact_store *store, enum cact_obj_type type)$/;"	f	typeref:struct:cact_obj *	signature:(struct cact_store * store,enum cact_obj_type type)
cact_store_count	lib/store.c	/^cact_store_count(struct cact_store *store)$/;"	f	typeref:typename:size_t	signature:(struct cact_store * store)
cact_store_data	include/cactus/store.h	/^struct cact_store_data {$/;"	s
cact_store_destroy	lib/store.c	/^cact_store_destroy(struct cact_store *store, struct cact_obj *obj)$/;"	f	typeref:typename:void	signature:(struct cact_store * store,struct cact_obj * obj)
cact_store_finish	lib/store.c	/^cact_store_finish(struct cact_store *store)$/;"	f	typeref:typename:void	signature:(struct cact_store * store)
cact_store_init	lib/store.c	/^cact_store_init(struct cact_store *store)$/;"	f	typeref:typename:void	signature:(struct cact_store * store)
cact_store_marking	include/cactus/store.h	/^enum cact_store_marking {$/;"	g
cact_store_needs_sweep	lib/store.c	/^cact_store_needs_sweep(struct cact_store *store)$/;"	f	typeref:typename:bool	signature:(struct cact_store * store)
cact_store_show	lib/store.c	/^cact_store_show(struct cact_store *store)$/;"	f	typeref:typename:void	signature:(struct cact_store * store)
cact_store_sweep	lib/store.c	/^cact_store_sweep(struct cact_store *store)$/;"	f	typeref:typename:int	signature:(struct cact_store * store)
cact_unpreserve	lib/core.c	/^cact_unpreserve(struct cactus *cact)$/;"	f	typeref:typename:void	signature:(struct cactus * cact)
cactus	include/cactus/core.h	/^struct cactus {$/;"	s
conts	include/cactus/core.h	/^	struct cact_cont_stack   conts;$/;"	m	struct:cactus	typeref:struct:cact_cont_stack
data	include/cactus/store.h	/^	void *data;$/;"	m	struct:cact_arena	typeref:typename:void *
destroy_fn	lib/obj.c	/^	void (*destroy_fn)(struct cact_obj *);$/;"	m	struct:__anoneb1a65170108	typeref:typename:void (*)(struct cact_obj *)	file:
element_sz	include/cactus/store.h	/^	size_t element_sz;$/;"	m	struct:cact_arena	typeref:typename:size_t
env	include/cactus/core.h	/^	struct cact_env *env;$/;"	m	struct:cact_cont	typeref:struct:cact_env *
factorial	tests/fixtures/factorial.scm	/^(define (factorial n)$/;"	f
fn	include/cactus/core.h	/^	cact_native_func fn;$/;"	m	struct:cact_builtin	typeref:typename:cact_native_func
fprint_list	lib/write.c	/^fprint_list(FILE *f, struct cact_val x)$/;"	f	typeref:typename:int	signature:(FILE * f,struct cact_val x)
fprint_obj	lib/write.c	/^fprint_obj(FILE *f, struct cact_obj *obj)$/;"	f	typeref:typename:int	signature:(FILE * f,struct cact_obj * obj)
fprint_sexp	lib/write.c	/^fprint_sexp(FILE *f, struct cact_val x)$/;"	f	typeref:typename:int	signature:(FILE * f,struct cact_val x)
gc_enabled	include/cactus/core.h	/^	bool                     gc_enabled;$/;"	m	struct:cactus	typeref:typename:bool
interned_syms	include/cactus/core.h	/^	struct cact_symbol_table interned_syms;$/;"	m	struct:cactus	typeref:struct:cact_symbol_table
is_application	lib/eval.c	/^is_application(struct cactus *cact, struct cact_val x)$/;"	f	typeref:typename:bool	file:	signature:(struct cactus * cact,struct cact_val x)
is_assignment	lib/eval.c	/^is_assignment(struct cactus *cact, struct cact_val x)$/;"	f	typeref:typename:bool	file:	signature:(struct cactus * cact,struct cact_val x)
is_conditional	lib/eval.c	/^is_conditional(struct cactus *cact, struct cact_val x)$/;"	f	typeref:typename:bool	file:	signature:(struct cactus * cact,struct cact_val x)
is_definition	lib/eval.c	/^is_definition(struct cactus *cact, struct cact_val x)$/;"	f	typeref:typename:bool	file:	signature:(struct cactus * cact,struct cact_val x)
is_lambda	lib/eval.c	/^is_lambda(struct cactus *cact, struct cact_val x)$/;"	f	typeref:typename:bool	file:	signature:(struct cactus * cact,struct cact_val x)
is_quotation	lib/eval.c	/^is_quotation(struct cactus *cact, struct cact_val x)$/;"	f	typeref:typename:bool	file:	signature:(struct cactus * cact,struct cact_val x)
is_self_evaluating	lib/eval.c	/^is_self_evaluating(struct cact_val x)$/;"	f	typeref:typename:bool	file:	signature:(struct cact_val x)
is_sequence	lib/eval.c	/^is_sequence(struct cactus *cact, struct cact_val x)$/;"	f	typeref:typename:bool	file:	signature:(struct cactus * cact,struct cact_val x)
is_tagged_pair	lib/eval.c	/^is_tagged_pair(struct cactus *cact, const char* tag, struct cact_val x)$/;"	f	typeref:typename:bool	file:	signature:(struct cactus * cact,const char * tag,struct cact_val x)
is_variable	lib/eval.c	/^is_variable(struct cact_val x)$/;"	f	typeref:typename:bool	file:	signature:(struct cact_val x)
lexer	include/cactus/core.h	/^	struct cact_lexer        lexer;$/;"	m	struct:cactus	typeref:struct:cact_lexer
mark	include/cactus/store.h	/^	enum cact_store_marking mark;$/;"	m	struct:cact_store_data	typeref:enum:cact_store_marking
mark_fn	lib/obj.c	/^	void (*mark_fn)(struct cact_obj *);$/;"	m	struct:__anoneb1a65170108	typeref:typename:void (*)(struct cact_obj *)	file:
name	include/cactus/core.h	/^	char* name;$/;"	m	struct:cact_builtin	typeref:typename:char *
obj	include/cactus/core.h	/^	struct cact_obj obj;$/;"	m	struct:cact_cont	typeref:struct:cact_obj
object_gc_methods	lib/obj.c	/^} object_gc_methods[] = {$/;"	v	typeref:struct:__anoneb1a65170108[]
occupied_set	include/cactus/store.h	/^	uint64_t occupied_set; \/* A bitset *\/$/;"	m	struct:cact_arena	typeref:typename:uint64_t
place	include/cactus/store.h	/^	size_t place;$/;"	m	struct:cact_store_data	typeref:typename:size_t
preserved	include/cactus/core.h	/^	struct cact_obj_vec      preserved;$/;"	m	struct:cactus	typeref:struct:cact_obj_vec
print_list	lib/write.c	/^print_list(struct cact_val x)$/;"	f	typeref:typename:int	signature:(struct cact_val x)
print_sexp	lib/write.c	/^print_sexp(struct cact_val x)$/;"	f	typeref:typename:int	signature:(struct cact_val x)
root_env	include/cactus/core.h	/^	struct cact_env         *root_env;$/;"	m	struct:cactus	typeref:struct:cact_env *
sets_len	include/cactus/store.h	/^	size_t sets_len;$/;"	m	struct:cact_store	typeref:typename:size_t
size	lib/store.c	/^		size_t size;$/;"	m	struct:cact_store_init::__anon79ada8490108	typeref:typename:size_t	file:
special_begin	lib/eval.c	/^special_begin(struct cactus *cact, struct cact_val args)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_val args)
special_define	lib/eval.c	/^special_define(struct cactus *cact, struct cact_val args)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_val args)
special_if	lib/eval.c	/^special_if(struct cactus *cact, struct cact_val args)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_val args)
special_lambda	lib/eval.c	/^special_lambda(struct cactus *cact, struct cact_val args)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_val args)
special_quote	lib/eval.c	/^special_quote(struct cactus *cact, struct cact_val args)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_val args)
special_set_bang	lib/eval.c	/^special_set_bang(struct cactus *cact, struct cact_val args)$/;"	f	typeref:struct:cact_val	signature:(struct cactus * cact,struct cact_val args)
store	include/cactus/core.h	/^	struct cact_store        store;$/;"	m	struct:cactus	typeref:struct:cact_store
store_data	include/cactus/obj.h	/^	struct cact_store_data store_data;$/;"	m	struct:cact_obj	typeref:struct:cact_store_data
type	include/cactus/obj.h	/^	enum cact_obj_type type;$/;"	m	struct:cact_obj	typeref:enum:cact_obj_type
type	lib/store.c	/^		enum cact_obj_type type;$/;"	m	struct:cact_store_init::__anon79ada8490108	typeref:enum:cact_obj_type	file:
write_h_INCLUDED	include/cactus/write.h	/^#define write_h_INCLUDED$/;"	d
